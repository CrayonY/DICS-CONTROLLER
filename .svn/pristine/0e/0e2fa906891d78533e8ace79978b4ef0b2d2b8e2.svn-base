package com.ucd.server.controller.hardwarecontroller;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.ucd.common.VO.ResultVO;
import com.ucd.common.utils.ResultVOUtil;
import com.ucd.common.utils.Tools;
import com.ucd.daocommon.DTO.hardwareDTO.HardwareDTO;
import com.ucd.daocommon.DTO.tdhServicesDTO.TdhServicesInfoDTO;
import com.ucd.server.enums.TdhServicesReturnEnum;

import com.ucd.server.trapswapApi.connection.Connection;
import com.ucd.server.utils.HttpClientUtils;
import org.apache.http.HttpStatus;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletResponse;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


@RestController
@RequestMapping("/hardware")
public class HardwareController {

	
	/**
	 * 引入日志，注意都是"org.slf4j"包下
	 */
	private final static Logger logger = LoggerFactory.getLogger(HardwareController.class);

	@PostMapping(value = "/gethardwareInfo")
	public ResultVO gethardwareInfo(@RequestParam(value = "param", required = false)String param ){
		ResultVO resultVO = new ResultVO();
		logger.info("接受参数1："+param);
		HardwareDTO result = Tools.jsonToObject(param,HardwareDTO.class);
		logger.info("解析参数1："+result);
		resultVO = ResultVOUtil.setResult(TdhServicesReturnEnum.SUCCESS.getCode(),TdhServicesReturnEnum.SUCCESS.getMessage(),result);
		logger.info("resultVO:"+resultVO);
		return resultVO;
	}

	@PostMapping(value = "/gethardwareInfo1")
	public ResultVO gethardwareInfo1(@RequestBody HardwareDTO hardwareDTO ){
		ResultVO resultVO = new ResultVO();
		logger.info("接受参数1："+hardwareDTO);
		resultVO = ResultVOUtil.setResult(TdhServicesReturnEnum.SUCCESS.getCode(),TdhServicesReturnEnum.SUCCESS.getMessage(),hardwareDTO);
		logger.info("resultVO:"+resultVO);
		return resultVO;
	}

	@PostMapping(value = "/gethardwareInfo2")
	public ResultVO gethardwareInfo2(@RequestBody String param ){
		ResultVO resultVO = new ResultVO();
		logger.info("接受参数2："+param);
		resultVO = ResultVOUtil.setResult(TdhServicesReturnEnum.SUCCESS.getCode(),TdhServicesReturnEnum.SUCCESS.getMessage(),param);
		logger.info("resultVO:"+resultVO);
		return resultVO;
	}

	@GetMapping(value = "/test")
	public ResultVO test(){
		ResultVO resultVO = new ResultVO();
		String content = "param={\"cpu\":\"1000\",\"vcpu\":\"200\"}";
		try {
			String result = HttpClientUtils.postString("http://10.66.1.192:28070/hardware/gethardwareInfo",content,
					"application/x-www-form-urlencoded",null);
			resultVO = ResultVOUtil.setResult(TdhServicesReturnEnum.SUCCESS.getCode(),TdhServicesReturnEnum.SUCCESS.getMessage(),result);
		} catch (Exception e) {
			e.printStackTrace();
			resultVO = ResultVOUtil.error(e);
		}
		return resultVO;
	}



	@GetMapping(value = "/test1")
	public ResultVO test1(){
		ResultVO resultVO = new ResultVO();
		String content = "{\"cpu\":\"1000\",\"vcpu\":\"200\"}";
		try {
			String result = HttpClientUtils.postString("http://10.66.1.192:28070/hardware/gethardwareInfo1",content,
					"application/json",null);
			resultVO = ResultVOUtil.setResult(TdhServicesReturnEnum.SUCCESS.getCode(),TdhServicesReturnEnum.SUCCESS.getMessage(),result);
		} catch (Exception e) {
			e.printStackTrace();
			resultVO = ResultVOUtil.error(e);
		}

		return resultVO;
	}


}
